{
  "name": "fingerprintjs",
  "version": "0.5.3",
  "main": "fingerprint.js",
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.6.3",
    "grunt-contrib-uglify": "~0.2.2"
  },
  "readme": "# fingerprintjs\n\n[![Build Status](https://travis-ci.org/Valve/fingerprintjs.png)](https://travis-ci.org/Valve/fingerprintjs)\n\nFast browser fingerprint library. Written in pure JavaScript, no dependencies. \nBy default uses [Murmur hashing][murmur] and returns a 32bit integer number.\nHashing function can be easily replaced.\nFeather weight: only **1.2** KB when gzipped.\n\n## What is fingerprinting?\n\nFingerprinting is a technique, outlined in [the research by Electronic Frontier Foundation][research], of\nanonymously identifying a web browser with accuracy of up to 94%. \n\n\nA browser is queried for its agent string, screen color depth, language,\ninstalled plugins with supported mime types, timezone offset and other capabilities, \nsuch as local storage and session storage. Then these values are passed through a hashing function\nto produce a fingerprint that gives weak guarantees of uniqueness.\n\nNo cookies are stored to identify a browser.\n\nIt's worth noting that a mobile share of browsers is much more uniform, so fingerprinting should be used\nonly as a supplementary identifying mechanism there.\n\n[Read more](http://valve.github.io/blog/2013/07/14/anonymous-browser-fingerprinting/)\nor\n[discuss on reddit](http://redd.it/1ic6ew)\n\n\n## Installation\n\n### Bower\n\n`\nbower install fingerprint\n`\n\n### NPM\n\n`\nnpm install fingerprintjs\n`\n_note the trailing *js* in the name_\n\n### Ruby-on-Rails\n\nIf you're on Rails, add this to your Gemfile\n\n`\ngem 'fingerprintjs-rails'\n`\nand \n\n`bundle install`\n\nAfter that you can add the file to sprockets:\n\n`\n//= require fingerprint\n`\n\n### Manual\n\nJust copy the `fingerprint.js` file to your js directory.\n\n## Usage\n\n```javascript\nvar fingerprint = new Fingerprint().get();\n```\n\nIf you want to use [canvas fingerprinting][canvas_research] pass the `canvas: true` option\n```javascript\nvar fingerprint = new Fingerprint({canvas: true}).get();\n```\nAccording to the above Pixel Perfect research, it should further increase the accuracy of\nfingerprinting.\n\n*Note for IE9:* in order to use the canvas fingerprinting on IE9, the html must have a valid\nhtml5 declaration:\n\n```\n<!DOCTYPE html>\n```\n\n\nIf you want to use the screen resolution in calculating the fingerprint,  pass the `screen_resolution: true` option\n```javascript\nvar fingerprint = new Fingerprint({screen_resolution: true}).get();\n```\n\n### Incognito mode (Chrome) or Private mode (Firefox)\n\nFingerprint generates identical output in regular and private modes, i.e. the reporting will identify a private mode browser as usual.\n\n\n### IE 6, IE 7, IE 8, IE 9, IE 10, IE 11\n\nDetecting the plugins information is very important in building the fingerprint.\n\nIn IE (surprise) it is not possible to just query the list of plugins, their mime types, etc.\nInstead, one must use special probing code to detect each individual plugin, because\nall plugins are ActiveX controls in IE.\n\nIf you want to query the IE plugins info to further diversify the fingerprinting process, pass the `ie_activex: true` option.\n\nThis will detect following plugins:\n\n- Adobe Reader\n- Adobe Flash Player\n- Apple QuickTime\n- Real player (all versions)\n- Shockwave player\n- Windows Media Player\n- Microsoft Silverlight\n- Skype ClickToCall\n\nNote that this process is safe for other browsers, and the `ie_activex` options will be ignored.\n\n\n### Using custom hashing function\n\n``` javascript\nvar my_hasher = new function(value, seed){ return value.length % seed; };\nvar fingerprint = new Fingerprint({hasher: my_hasher}).get();\n```\nor pass the hashing function as is:\n\n``` javascript\nvar my_hasher = new function(value, seed){ return value.length % seed; };\nvar fingerprint = new Fingerprint(my_hasher).get();\n```\n\n## Running specs\n\nRunning specs manually is just opening the `specs/test_runner.html`\n\n\nRunning specs from the command line or in CI requires [phantomjs][phantomjs] in your `PATH`\n\n```\ncd specs\n\nphantomjs lib/phantom-jasmine/run_jasmine_test.coffee test_runner.html\n```\n\nThe example is in `run.sh` file.\n\n## Building\n\nTo build the project, run `grunt` command. This will run the jshint and uglify the code into `build/fingerprint.min.js`.\nRunning specs with grunt is not implemented but is on my todo list.\n\n### Manual minification\n\nTo minify the file I recommend using [uglifyjs][uglifyjs](requires node.js)\nIf you don't have it installed, install it with:\n\n```\nnpm -g install uglify-js\n```\n\nThen run the minification with:\n\n```\nuglifyjs fingerprint.js > fingerprint.min.js -mc\n```\n\n`-mc` tells uglifier to (m)angle and (c)ompress the input code.\n\nIf you don't have node.js installed on your machine, you can create a minified version of the library with\nonline services, such as [Google Closure compiler][closure]\n\n\n### Licence\n\nThis code is [MIT][mit] licenced:\n\nCopyright (c) 2013 Valentin Vasilyev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[mit]: http://www.opensource.org/licenses/mit-license.php\n[murmur]: http://en.wikipedia.org/wiki/MurmurHash\n[research]: https://panopticlick.eff.org/browser-uniqueness.pdf\n[phantomjs]: http://phantomjs.org/\n[uglifyjs]: https://github.com/mishoo/UglifyJS\n[closure]: http://closure-compiler.appspot.com\n[canvas_research]: http://cseweb.ucsd.edu/~hovav/dist/canvas.pdf\n",
  "readmeFilename": "README.md",
  "description": "[![Build Status](https://travis-ci.org/Valve/fingerprintjs.png)](https://travis-ci.org/Valve/fingerprintjs)",
  "_id": "fingerprintjs@0.5.3",
  "_from": "fingerprintjs@"
}
